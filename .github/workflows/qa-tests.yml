name: MarketScale QA Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM

jobs:
  health-checks:
    name: Health Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, dom, fileinfo, mysql, sqlite
          coverage: none
      
      - name: Install Node Dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Install PHP Dependencies
        run: composer install --no-dev --optimize-autoloader
      
      - name: Run Health Checks
        run: python3 demo_simple.py

  cypress-tests:
    name: Cypress E2E Tests
    runs-on: ubuntu-latest
    needs: health-checks
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run Cypress Tests
        run: npx cypress run --headless
        continue-on-error: true

  playwright-tests:
    name: Playwright Cross-Browser Tests
    runs-on: ubuntu-latest
    needs: health-checks
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Run Playwright Tests
        run: npx playwright test --project=${{ matrix.browser }}
        continue-on-error: true

  performance-tests:
    name: Performance Tests (k6)
    runs-on: ubuntu-latest
    needs: health-checks
    steps:
      - uses: actions/checkout@v4
      
      - name: Install k6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
      
      - name: Run Performance Tests
        run: k6 run k6-tests/video-processing-load.js --duration=30s --vus=5
        continue-on-error: true

  test-report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [cypress-tests, playwright-tests, performance-tests]
    if: always()
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run Test Report
        run: python3 demo_simple.py
      
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30
